--- libs/locale/src/shared/mo_lambda.cpp
+++ libs/locale/src/shared/mo_lambda.cpp
@@ -6,8 +6,8 @@
 //  http://www.boost.org/LICENSE_1_0.txt)
 //
 #include "mo_lambda.hpp"
-#include <string.h>
-#include <stdlib.h>
+#include <cstring>
+#include <cstdlib>
 
 namespace boost {
 namespace locale {
@@ -274,16 +274,16 @@
             while(text[pos] && is_blank(text[pos])) pos++;
             char const *ptr=text+pos;
             char *tmp_ptr;
-            if(strncmp(ptr,"<<",2)==0) { pos+=2; next_tocken=SHL; }
-            else if(strncmp(ptr,">>",2)==0) { pos+=2; next_tocken=SHR; }
-            else if(strncmp(ptr,"&&",2)==0) { pos+=2; next_tocken=AND; }
-            else if(strncmp(ptr,"||",2)==0) { pos+=2; next_tocken=OR; }
-            else if(strncmp(ptr,"<=",2)==0) { pos+=2; next_tocken=LTE; }
-            else if(strncmp(ptr,">=",2)==0) { pos+=2; next_tocken=GTE; }
-            else if(strncmp(ptr,"==",2)==0) { pos+=2; next_tocken=EQ; }
-            else if(strncmp(ptr,"!=",2)==0) { pos+=2; next_tocken=NEQ; }
+            if(std::strncmp(ptr,"<<",2)==0) { pos+=2; next_tocken=SHL; }
+            else if(std::strncmp(ptr,">>",2)==0) { pos+=2; next_tocken=SHR; }
+            else if(std::strncmp(ptr,"&&",2)==0) { pos+=2; next_tocken=AND; }
+            else if(std::strncmp(ptr,"||",2)==0) { pos+=2; next_tocken=OR; }
+            else if(std::strncmp(ptr,"<=",2)==0) { pos+=2; next_tocken=LTE; }
+            else if(std::strncmp(ptr,">=",2)==0) { pos+=2; next_tocken=GTE; }
+            else if(std::strncmp(ptr,"==",2)==0) { pos+=2; next_tocken=EQ; }
+            else if(std::strncmp(ptr,"!=",2)==0) { pos+=2; next_tocken=NEQ; }
             else if(*ptr=='n') { pos++; next_tocken=VARIABLE; }
-            else if(isdigit(*ptr)) { int_value=strtol(text+pos,&tmp_ptr,0); pos=tmp_ptr-text; next_tocken=NUM; }
+            else if(isdigit(*ptr)) { int_value=std::strtol(text+pos,&tmp_ptr,0); pos=tmp_ptr-text; next_tocken=NUM; }
             else if(*ptr=='\0') { next_tocken=0; }
             else { next_tocken=*ptr; pos++; }
         }
