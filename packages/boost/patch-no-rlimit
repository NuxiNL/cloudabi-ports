--- libs/context/src/posix/stack_traits.cpp
+++ libs/context/src/posix/stack_traits.cpp
@@ -39,6 +39,7 @@
     * size = ::sysconf( _SC_PAGESIZE);
 }
 
+#if 0
 void stacksize_limit_( rlimit * limit)
 {
     // conforming to POSIX.1-2001
@@ -50,6 +51,7 @@
     (void)result;
 #endif
 }
+#endif
 
 std::size_t pagesize()
 {
@@ -59,6 +61,7 @@
     return size;
 }
 
+#if 0
 rlimit stacksize_limit()
 {
     static rlimit limit;
@@ -66,6 +69,7 @@
     boost::call_once( flag, stacksize_limit_, & limit);
     return limit;
 }
+#endif
 
 }
 
@@ -74,7 +78,7 @@
 
 bool
 stack_traits::is_unbounded() BOOST_NOEXCEPT
-{ return RLIM_INFINITY == stacksize_limit().rlim_max; }
+{ return true; }
 
 std::size_t
 stack_traits::page_size() BOOST_NOEXCEPT
@@ -100,7 +104,7 @@
 stack_traits::maximum_size() BOOST_NOEXCEPT
 {
     BOOST_ASSERT( ! is_unbounded() );
-    return static_cast< std::size_t >( stacksize_limit().rlim_max);
+    return SIZE_MAX;
 }
 
 }}
--- libs/coroutine/src/posix/stack_traits.cpp
+++ libs/coroutine/src/posix/stack_traits.cpp
@@ -38,6 +38,7 @@
     * size = ::sysconf( _SC_PAGESIZE);
 }
 
+#if 0
 void stacksize_limit_( rlimit * limit)
 {
     // conforming to POSIX.1-2001
@@ -48,6 +49,7 @@
     BOOST_ASSERT( 0 == result);
 #endif
 }
+#endif
 
 std::size_t pagesize()
 {
@@ -57,6 +59,7 @@
     return size;
 }
 
+#if 0
 rlimit stacksize_limit()
 {
     static rlimit limit;
@@ -64,6 +67,7 @@
     boost::call_once( flag, stacksize_limit_, & limit);
     return limit;
 }
+#endif
 
 }
 
@@ -72,7 +76,7 @@
 
 bool
 stack_traits::is_unbounded() BOOST_NOEXCEPT
-{ return RLIM_INFINITY == stacksize_limit().rlim_max; }
+{ return true; }
 
 std::size_t
 stack_traits::page_size() BOOST_NOEXCEPT
@@ -98,7 +102,7 @@
 stack_traits::maximum_size() BOOST_NOEXCEPT
 {
     BOOST_ASSERT( ! is_unbounded() );
-    return static_cast< std::size_t >( stacksize_limit().rlim_max);
+    return SIZE_MAX;
 }
 
 }}
