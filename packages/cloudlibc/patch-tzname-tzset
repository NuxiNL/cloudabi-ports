--- src/include/time.h
+++ src/include/time.h
@@ -46,8 +46,6 @@
 // - struct itimerspec, timer_create(), timer_delete(), timer_getoverrun(),
 //   timer_gettime(), timer_settime():
 //   Requires signal handling support.
-// - tzset(), daylight, timezone, tzname:
-//   No process-wide timezone exists.
 
 #ifndef _TIME_H_
 #define _TIME_H_
@@ -108,6 +106,8 @@
 
 #define TIME_UTC CLOCK_REALTIME
 
+extern char *tzname[];
+
 __BEGIN_DECLS
 char *asctime_r(const struct tm *__restrict, char *__restrict);
 clock_t clock(void);
@@ -134,6 +134,7 @@
                  struct tm *__restrict, locale_t);
 time_t time(time_t *);
 int timespec_get(struct timespec *, int);
+void tzset(void);
 __END_DECLS
 
 #endif
--- src/libc/time/tzname.c
+++ src/libc/time/tzname.c
@@ -0,0 +1,10 @@
+// Copyright (c) 2015 Nuxi, https://nuxi.nl/
+//
+// This file is distrbuted under a 2-clause BSD license.
+// See the LICENSE file for details.
+
+// The global timezone in this environment is always UTC. Don't include
+// <time.h> and redeclare the tzname array as const, to ensure its
+// contents are never overwritten.
+extern const char *const tzname[];
+const char *const tzname[2] = {"UTC", "UTC"};
--- src/libc/time/tzset.c
+++ src/libc/time/tzset.c
@@ -0,0 +1,10 @@
+// Copyright (c) 2015 Nuxi, https://nuxi.nl/
+//
+// This file is distrbuted under a 2-clause BSD license.
+// See the LICENSE file for details.
+
+#include <time.h>
+
+void tzset(void) {
+  // Nothing to do.
+}
