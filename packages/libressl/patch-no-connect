--- crypto/bio/bss_conn.c
+++ crypto/bio/bss_conn.c
@@ -230,6 +230,7 @@
 			break;
 
 		case BIO_CONN_S_CONNECT:
+#if 0
 			BIO_clear_retry_flags(b);
 			ret = connect(b->num,
 			(struct sockaddr *)&c->them,
@@ -250,6 +251,9 @@
 			} else
 				c->state = BIO_CONN_S_OK;
 			break;
+#endif
+			BIOerror(BIO_R_CONNECT_ERROR);
+			return (-1);
 
 		case BIO_CONN_S_BLOCKED_CONNECT:
 			i = BIO_sock_error(b->num);
--- include/tls.h
+++ include/tls.h
@@ -158,11 +158,8 @@
 int tls_accept_socket(struct tls *_ctx, struct tls **_cctx, int _socket);
 int tls_accept_cbs(struct tls *_ctx, struct tls **_cctx,
     tls_read_cb _read_cb, tls_write_cb _write_cb, void *_cb_arg);
-int tls_connect(struct tls *_ctx, const char *_host, const char *_port);
 int tls_connect_fds(struct tls *_ctx, int _fd_read, int _fd_write,
     const char *_servername);
-int tls_connect_servername(struct tls *_ctx, const char *_host,
-    const char *_port, const char *_servername);
 int tls_connect_socket(struct tls *_ctx, int _s, const char *_servername);
 int tls_connect_cbs(struct tls *_ctx, tls_read_cb _read_cb,
     tls_write_cb _write_cb, void *_cb_arg, const char *_servername);
--- tls/tls_client.c
+++ tls/tls_client.c
@@ -44,6 +44,7 @@
 	return (ctx);
 }
 
+#if 0
 int
 tls_connect(struct tls *ctx, const char *host, const char *port)
 {
@@ -157,6 +158,7 @@
 
 	return (rv);
 }
+#endif
 
 static int
 tls_connect_common(struct tls *ctx, const char *servername)
