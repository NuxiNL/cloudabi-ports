--- crypto/bio/b_sock.c
+++ crypto/bio/b_sock.c
@@ -165,6 +165,7 @@
 	return (ret);
 }
 
+#if 0
 int
 BIO_get_accept_socket(char *host, int bind_mode)
 {
@@ -319,6 +320,7 @@
 	}
 	return (s);
 }
+#endif
 
 int
 BIO_accept(int sock, char **addr)
--- crypto/bio/bss_acpt.c
+++ crypto/bio/bss_acpt.c
@@ -200,6 +200,7 @@
 again:
 	switch (c->state) {
 	case ACPT_S_BEFORE:
+#if 0
 		if (c->param_addr == NULL) {
 			BIOerror(BIO_R_NO_ACCEPT_PORT_SPECIFIED);
 			return (-1);
@@ -220,6 +221,9 @@
 		c->state = ACPT_S_GET_ACCEPT_SOCKET;
 		return (1);
 		/* break; */
+#endif
+		BIOerror(BIO_R_UNABLE_TO_BIND_SOCKET);
+		return (-1);
 	case ACPT_S_GET_ACCEPT_SOCKET:
 		if (b->next_bio != NULL) {
 			c->state = ACPT_S_OK;
--- include/openssl/bio.h
+++ include/openssl/bio.h
@@ -654,7 +654,6 @@
 int BIO_socket_nbio(int fd, int mode);
 int BIO_get_port(const char *str, unsigned short *port_ptr);
 int BIO_get_host_ip(const char *str, unsigned char *ip);
-int BIO_get_accept_socket(char *host_port, int mode);
 int BIO_accept(int sock, char **ip_port);
 int BIO_sock_init(void );
 void BIO_sock_cleanup(void);
