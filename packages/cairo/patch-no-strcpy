--- src/cairo-cff-subset.c
+++ src/cairo-cff-subset.c
@@ -295,21 +295,11 @@
 static unsigned char *
 decode_real (unsigned char *p, double *real)
 {
-    const char *decimal_point;
-    int decimal_point_len;
     int n;
     char buffer[100];
-    char buffer2[200];
-    char *q;
     char *buf = buffer;
     char *buf_end = buffer + sizeof (buffer);
 
-    decimal_point = cairo_get_locale_decimal_point ();
-    decimal_point_len = strlen (decimal_point);
-
-    assert (decimal_point_len != 0);
-    assert (sizeof(buffer) + decimal_point_len < sizeof(buffer2));
-
     p++;
     while (buf + 2 < buf_end) {
 	n = *p >> 4;
@@ -324,18 +314,7 @@
     };
     *buf = 0;
 
-    buf = buffer;
-    if (strchr (buffer, '.')) {
-	 q = strchr (buffer, '.');
-	 strncpy (buffer2, buffer, q - buffer);
-	 buf = buffer2 + (q - buffer);
-	 strncpy (buf, decimal_point, decimal_point_len);
-	 buf += decimal_point_len;
-	 strcpy (buf, q + 1);
-	 buf = buffer2;
-    }
-
-    if (sscanf(buf, "%lf", real) != 1)
+    if (sscanf(buffer, "%lf", real) != 1)
         *real = 0.0;
 
     return p;
--- src/cairo-pdf-surface.c
+++ src/cairo-pdf-surface.c
@@ -4734,11 +4734,16 @@
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	}
 
-	strcpy (str, "<FEFF");
+	str[0] = '<';
+	str[1] = 'F';
+	str[2] = 'E';
+	str[3] = 'F';
+	str[4] = 'F';
 	for (i = 0; i < utf16_len; i++)
 	    snprintf (str + 4*i + 5, 5, "%04X", utf16[i]);
 
-	strcat (str, ">");
+	str[4*utf16_len + 5] = '>';
+	str[4*utf16_len + 6] = '\0';
 	free (utf16);
     }
     *str_out = str;
