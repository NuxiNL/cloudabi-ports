--- Include/fileutils.h
+++ Include/fileutils.h
@@ -48,9 +48,11 @@
     struct _Py_stat_struct *status);
 #endif   /* Py_LIMITED_API */
 
+#ifdef HAVE_STAT
 PyAPI_FUNC(int) _Py_stat(
     PyObject *path,
     struct stat *status);
+#endif /* HAVE_STAT */
 
 #ifndef Py_LIMITED_API
 PyAPI_FUNC(int) _Py_open(
--- Modules/getpath.c
+++ Modules/getpath.c
@@ -126,8 +126,13 @@
         errno = EINVAL;
         return -1;
     }
+#ifdef HAVE_STAT
     err = stat(fname, buf);
+#else
+    {err = -1; errno = ENOSYS;}
+#endif
     PyMem_Free(fname);
+    
     return err;
 }
 
--- Modules/posixmodule.c
+++ Modules/posixmodule.c
@@ -11507,6 +11507,7 @@
 static PyObject *
 DirEntry_fetch_stat(DirEntry *self, int follow_symlinks)
 {
+#if defined(HAVE_STAT)
     int result;
     struct _Py_stat_struct st;
 
@@ -11545,6 +11546,9 @@
 #endif
 
     return _pystat_fromstructstat(&st);
+#else
+    return NULL;
+#endif
 }
 
 static PyObject *
--- Modules/zipimport.c
+++ Modules/zipimport.c
@@ -100,7 +100,12 @@
         struct stat statbuf;
         int rv;
 
+#ifdef HAVE_STAT
         rv = _Py_stat(filename, &statbuf);
+#else
+        rv = -1;
+        errno = ENOSYS;
+#endif /* HAVE_STAT */
         if (rv == -2)
             goto error;
         if (rv == 0) {
--- Python/fileutils.c
+++ Python/fileutils.c
@@ -708,6 +708,7 @@
    Return 0 on success, -1 on _wstat() / stat() error, -2 if an exception was
    raised. */
 
+#ifdef HAVE_STAT
 int
 _Py_stat(PyObject *path, struct stat *statbuf)
 {
@@ -733,6 +734,7 @@
     return ret;
 #endif
 }
+#endif /* HAVE_STAT */
 
 
 static int
