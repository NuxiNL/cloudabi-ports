--- Python/pylifecycle.c
+++ Python/pylifecycle.c
@@ -1544,6 +1544,7 @@
 static void
 initsigs(void)
 {
+#ifdef SIG_IGN
 #ifdef SIGPIPE
     PyOS_setsig(SIGPIPE, SIG_IGN);
 #endif
@@ -1553,6 +1554,7 @@
 #ifdef SIGXFSZ
     PyOS_setsig(SIGXFSZ, SIG_IGN);
 #endif
+#endif /* SIG_IGN */
     PyOS_InitInterrupts(); /* May imply initsignal() */
     if (PyErr_Occurred()) {
         Py_FatalError("Py_Initialize: can't import signal");
@@ -1569,6 +1571,7 @@
 void
 _Py_RestoreSignals(void)
 {
+#ifdef SIG_DFL
 #ifdef SIGPIPE
     PyOS_setsig(SIGPIPE, SIG_DFL);
 #endif
@@ -1578,6 +1581,7 @@
 #ifdef SIGXFSZ
     PyOS_setsig(SIGXFSZ, SIG_DFL);
 #endif
+#endif /* SIG_DFL */
 }
 
 
@@ -1610,7 +1614,7 @@
     if (sigaction(sig, NULL, &context) == -1)
         return SIG_ERR;
     return context.sa_handler;
-#else
+#elif defined(HAVE_SIGNAL)
     PyOS_sighandler_t handler;
 /* Special signal handling for the secure CRT in Visual Studio 2005 */
 #if defined(_MSC_VER) && _MSC_VER >= 1400
@@ -1656,7 +1660,7 @@
     if (sigaction(sig, &context, &ocontext) == -1)
         return SIG_ERR;
     return ocontext.sa_handler;
-#else
+#elif defined(HAVE_SIGNAL)
     PyOS_sighandler_t oldhandler;
     oldhandler = signal(sig, handler);
 #ifdef HAVE_SIGINTERRUPT
