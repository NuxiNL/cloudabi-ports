--- Modules/clinic/posixmodule.c.h
+++ Modules/clinic/posixmodule.c.h
@@ -1860,6 +1860,31 @@
 
 #endif /* defined(HAVE_FORK) */
 
+#if defined(HAVE_PDFORK)
+
+PyDoc_STRVAR(os_pdfork__doc__,
+"pdfork($module, /)\n"
+"--\n"
+"\n"
+"Fork a child process.\n"
+"\n"
+"Return -1 to the child process and process FD of the child process to the\n"
+"parent process.");
+
+#define OS_PDFORK_METHODDEF    \
+    {"pdfork", (PyCFunction)os_pdfork, METH_NOARGS, os_pdfork__doc__},
+
+static PyObject *
+os_pdfork_impl(PyObject *module);
+
+static PyObject *
+os_pdfork(PyObject *module, PyObject *Py_UNUSED(ignored))
+{
+    return os_pdfork_impl(module);
+}
+
+#endif /* defined(HAVE_PDFORK) */
+
 #if defined(HAVE_SCHED_H) && defined(HAVE_SCHED_GET_PRIORITY_MAX)
 
 PyDoc_STRVAR(os_sched_get_priority_max__doc__,
@@ -5786,6 +5811,10 @@
     #define OS_FORK_METHODDEF
 #endif /* !defined(OS_FORK_METHODDEF) */
 
+#ifndef OS_PDFORK_METHODDEF
+    #define OS_PDFORK_METHODDEF
+#endif /* !defined(OS_PDFORK_METHODDEF) */
+
 #ifndef OS_SCHED_GET_PRIORITY_MAX_METHODDEF
     #define OS_SCHED_GET_PRIORITY_MAX_METHODDEF
 #endif /* !defined(OS_SCHED_GET_PRIORITY_MAX_METHODDEF) */
--- Modules/posixmodule.c
+++ Modules/posixmodule.c
@@ -117,6 +117,10 @@
 #endif
 #endif
 
+#ifdef HAVE_PDFORK
+#include <sys/procdesc.h>
+#endif
+
 #ifdef HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
@@ -5300,6 +5304,42 @@
 }
 #endif /* HAVE_FORK */
 
+#ifdef HAVE_PDFORK
+/*[clinic input]
+os.pdfork
+
+Fork a child process.
+
+Return -1 to the child process and process FD of the child process to the
+parent process.
+[clinic start generated code]*/
+
+static PyObject *
+os_pdfork_impl(PyObject *module)
+/*[clinic end generated code: output=4781d3959a6d78d4 input=c2e365a35a813293]*/
+{
+    int fd;
+    int result = 0;
+    _PyImport_AcquireLock();
+    result = pdfork(&fd, 0);
+    if(result == 0) {
+      /* child: this clobbers and resets the import lock. */
+      PyOS_AfterFork();
+      return PyLong_FromLong(-1);
+    } else if(result == 1) {
+      /* parent: release the import lock. */
+      result = _PyImport_ReleaseLock();
+      if(result < 0) {
+        PyErr_SetString(PyExc_RuntimeError, "not holding the import lock");
+        return NULL;
+      }
+      return PyLong_FromUnsignedLong(fd);
+    } else {
+      /* error */
+      return posix_error();
+    }
+}
+#endif /* HAVE_PDFORK */
 
 #ifdef HAVE_SCHED_H
 #ifdef HAVE_SCHED_GET_PRIORITY_MAX
@@ -12201,6 +12241,7 @@
     OS_SPAWNVE_METHODDEF
     OS_FORK1_METHODDEF
     OS_FORK_METHODDEF
+    OS_PDFORK_METHODDEF
     OS_SCHED_GET_PRIORITY_MAX_METHODDEF
     OS_SCHED_GET_PRIORITY_MIN_METHODDEF
     OS_SCHED_GETPARAM_METHODDEF
--- pyconfig.h.in
+++ pyconfig.h.in
@@ -302,6 +302,9 @@
 /* Define to 1 if you have the `fork' function. */
 #undef HAVE_FORK
 
+/* Define to 1 if you have the `pdfork' function. */
+#define HAVE_PDFORK 1
+
 /* Define to 1 if you have the `forkpty' function. */
 #undef HAVE_FORKPTY
 
