--- Programs/_freeze_importlib.c
+++ Programs/_freeze_importlib.c
@@ -32,7 +32,11 @@
 int
 main(int argc, char *argv[])
 {
+#if !defined(__CloudABI__)
     char *inpath, *outpath, *code_name;
+#else
+    char *code_name;
+#endif
     FILE *infile = NULL, *outfile = NULL;
     struct _Py_stat_struct status;
     size_t text_size, data_size, n;
@@ -43,6 +47,7 @@
 
     PyImport_FrozenModules = _PyImport_FrozenModules;
 
+#if !defined(__CloudABI__)
     if (argc != 3) {
         fprintf(stderr, "need to specify input and output paths\n");
         return 2;
@@ -50,12 +55,23 @@
     inpath = argv[1];
     outpath = argv[2];
     infile = fopen(inpath, "rb");
+#else
+    infile = fdopen(0, "rb");
+#endif
     if (infile == NULL) {
+#if !defined(__CloudABI__)
         fprintf(stderr, "cannot open '%s' for reading\n", inpath);
+#else
+        fprintf(stderr, "cannot open infile for reading\n");
+#endif
         goto error;
     }
     if (_Py_fstat_noraise(fileno(infile), &status)) {
+#if !defined(__CloudABI__)
         fprintf(stderr, "cannot fstat '%s'\n", inpath);
+#else
+        fprintf(stderr, "cannot fstat infile\n");
+#endif
         goto error;
     }
     text_size = status.st_size;
@@ -82,7 +98,11 @@
     /* Don't install importlib, since it could execute outdated bytecode. */
     _Py_InitializeEx_Private(1, 0);
 
+#if !defined(__CloudABI__)
     if (strstr(inpath, "_external") != NULL) {
+#else
+    if (strstr(text, "_bootstrap_external") == NULL) {
+#endif
         is_bootstrap = 0;
     }
 
@@ -106,9 +126,17 @@
 
     /* Open the file in text mode. The hg checkout should be using the eol extension,
        which in turn should cause the EOL style match the C library's text mode */
+#if !defined(__CloudABI__)
     outfile = fopen(outpath, "w");
+#else
+    outfile = fdopen(1, "w");
+#endif
     if (outfile == NULL) {
+#if !defined(__CloudABI__)
         fprintf(stderr, "cannot open '%s' for writing\n", outpath);
+#else
+        fprintf(stderr, "cannot open outfile for writing\n");
+#endif
         goto error;
     }
     fprintf(outfile, "%s\n", header);
@@ -132,7 +160,11 @@
     Py_Finalize();
     if (outfile) {
         if (ferror(outfile)) {
+#if !defined(__CloudABI__)
             fprintf(stderr, "error when writing to '%s'\n", outpath);
+#else
+            fprintf(stderr, "error when writing to outfile\n");
+#endif
             goto error;
         }
         fclose(outfile);
