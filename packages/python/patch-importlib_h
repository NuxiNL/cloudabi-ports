--- Lib/importlib/_bootstrap_external.py
+++ Lib/importlib/_bootstrap_external.py
@@ -1078,6 +1078,9 @@
                 # Don't cache the failure as the cwd can easily change to
                 # a valid directory later on.
                 return None
+            except AttributeError:
+                # CloudABI has no concept of a current working directory
+                return None
         try:
             finder = sys.path_importer_cache[path]
         except KeyError:
--- Makefile.pre.in
+++ Makefile.pre.in
@@ -90,7 +90,7 @@
 # Both CPPFLAGS and LDFLAGS need to contain the shell's value for setup.py to
 # be able to build extension modules using the directories specified in the
 # environment variables
-PY_CPPFLAGS=	$(BASECPPFLAGS) -I. -IInclude -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) $(CPPFLAGS)
+PY_CPPFLAGS=	$(BASECPPFLAGS) -I. -IPython -IInclude -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) $(CPPFLAGS)
 PY_LDFLAGS=	$(CONFIGURE_LDFLAGS) $(LDFLAGS)
 NO_AS_NEEDED=	@NO_AS_NEEDED@
 LDLAST=		@LDLAST@
@@ -223,6 +223,7 @@
 
 cross_compiling=@cross_compiling@
 PYTHON_FOR_BUILD=@PYTHON_FOR_BUILD@
+FREEZE_IMPORTLIB_FOR_BUILD=/usr/obj/cloudabi-ports/build/1/Programs/_freeze_importlib
 _PYTHON_HOST_PLATFORM=@_PYTHON_HOST_PLATFORM@
 BUILD_GNU_TYPE=	@build@
 HOST_GNU_TYPE=	@host@
@@ -722,12 +723,18 @@
 	if test "$(cross_compiling)" != "yes"; then \
 	    ./Programs/_freeze_importlib \
 	        $(srcdir)/Lib/importlib/_bootstrap_external.py Python/importlib_external.h; \
+	else \
+	    ./Programs/_freeze_importlib < $(srcdir)/Lib/importlib/_bootstrap_external.py \
+	                                 > Python/importlib_external.h; \
 	fi
 
 Python/importlib.h: $(srcdir)/Lib/importlib/_bootstrap.py Programs/_freeze_importlib
 	if test "$(cross_compiling)" != "yes"; then \
 	    ./Programs/_freeze_importlib \
 	        $(srcdir)/Lib/importlib/_bootstrap.py Python/importlib.h; \
+	else \
+	    ./Programs/_freeze_importlib < $(srcdir)/Lib/importlib/_bootstrap.py \
+	                                 > Python/importlib.h; \
 	fi
 
 
