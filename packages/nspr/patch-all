--- pr/include/md/_pth.h
+++ pr/include/md/_pth.h
@@ -116,7 +116,7 @@
 	|| defined(LINUX) || defined(__GNU__) || defined(__GLIBC__) \
 	|| defined(HPUX) || defined(FREEBSD) \
 	|| defined(NETBSD) || defined(OPENBSD) || defined(BSDI) \
-	|| defined(NTO) || defined(DARWIN) \
+	|| defined(NTO) || defined(DARWIN) || defined(CLOUDABI) \
 	|| defined(UNIXWARE) || defined(RISCOS)	|| defined(SYMBIAN)
 #define _PT_PTHREAD_INVALIDATE_THR_HANDLE(t)  (t) = 0
 #define _PT_PTHREAD_THR_HANDLE_IS_INVALID(t)  (t) == 0
@@ -229,6 +229,7 @@
 	|| defined(RISCOS) /* XXX */
 #define PT_PRIO_MIN            0
 #define PT_PRIO_MAX            126
+#elif defined(CLOUDABI)
 #else
 #error "pthreads is not supported for this architecture"
 #endif
@@ -261,7 +262,8 @@
 	|| defined(LINUX) || defined(__GNU__) || defined(__GLIBC__) \
 	|| defined(FREEBSD) || defined(NETBSD) || defined(OPENBSD) \
 	|| defined(BSDI) || defined(NTO) || defined(DARWIN) \
-	|| defined(UNIXWARE) || defined(RISCOS) || defined(SYMBIAN)
+	|| defined(UNIXWARE) || defined(RISCOS) || defined(SYMBIAN) \
+	|| defined(CLOUDABI)
 #define _PT_PTHREAD_YIELD()            	sched_yield()
 #else
 #error "Need to define _PT_PTHREAD_YIELD for this platform"
--- pr/include/md/_unixos.h
+++ pr/include/md/_unixos.h
@@ -208,29 +208,12 @@
 
 /************************************************************************/
 
-struct _MDProcess {
-    pid_t pid;
-};
 
-struct PRProcess;
-struct PRProcessAttr;
 
 /* Create a new process (fork() + exec()) */
-#define _MD_CREATE_PROCESS _MD_CreateUnixProcess
-extern struct PRProcess * _MD_CreateUnixProcess(
-    const char *path,
-    char *const *argv,
-    char *const *envp,
-    const struct PRProcessAttr *attr
-);
 
-#define _MD_DETACH_PROCESS _MD_DetachUnixProcess
-extern PRStatus _MD_DetachUnixProcess(struct PRProcess *process);
 
 /* Wait for a child process to terminate */
-#define _MD_WAIT_PROCESS _MD_WaitUnixProcess
-extern PRStatus _MD_WaitUnixProcess(struct PRProcess *process,
-    PRInt32 *exitCode);
 
 #define _MD_KILL_PROCESS _MD_KillUnixProcess
 extern PRStatus _MD_KillUnixProcess(struct PRProcess *process);
--- pr/include/obsolete/probslet.h
+++ pr/include/obsolete/probslet.h
@@ -132,9 +132,7 @@
 ** declared here for historical reasons.
 */
 
-NSPR_API(PRInt32) PR_GetSysfdTableMax(void);
 
-NSPR_API(PRInt32) PR_SetSysfdTableSize(PRIntn table_size);
 
 #ifndef NO_NSPR_10_SUPPORT
 #include <sys/stat.h>
--- pr/include/private/pprthred.h
+++ pr/include/private/pprthred.h
@@ -149,13 +149,11 @@
 ** This routine prevents all other GC able threads from running. This call is needed by 
 ** the garbage collector.
 */
-NSPR_API(void) PR_SuspendAll(void);
 
 /*
 ** This routine unblocks all other GC able threads that were suspended from running by 
 ** PR_SuspendAll(). This call is needed by the garbage collector.
 */
-NSPR_API(void) PR_ResumeAll(void);
 
 /*
 ** Return the thread stack pointer of the given thread. 
--- pr/include/private/primpl.h
+++ pr/include/private/primpl.h
@@ -1674,19 +1674,7 @@
 #endif
 };
 
-struct PRProcessAttr {
-    PRFileDesc *stdinFd;
-    PRFileDesc *stdoutFd;
-    PRFileDesc *stderrFd;
-    char *currentDirectory;
-    char *fdInheritBuffer;
-    PRSize fdInheritBufferSize;
-    PRSize fdInheritBufferUsed;
-};
 
-struct PRProcess {
-    _MDProcess md;
-};
 
 struct PRFileMap {
     PRFileDesc *fd;
@@ -1896,6 +1884,7 @@
 
 /* Process control */
 
+#if 0
 extern PRProcess * _PR_MD_CREATE_PROCESS(
     const char *path,
     char *const *argv,
@@ -1911,6 +1900,7 @@
 
 extern PRStatus _PR_MD_KILL_PROCESS(PRProcess *process);
 #define    _PR_MD_KILL_PROCESS _MD_KILL_PROCESS        
+#endif
 
 /* Current Time */
 NSPR_API(PRTime) _PR_MD_NOW(void);
--- pr/include/prproces.h
+++ pr/include/prproces.h
@@ -18,37 +18,15 @@
 typedef struct PRProcess PRProcess;
 typedef struct PRProcessAttr PRProcessAttr;
 
-NSPR_API(PRProcessAttr *) PR_NewProcessAttr(void);
 
-NSPR_API(void) PR_ResetProcessAttr(PRProcessAttr *attr);
 
-NSPR_API(void) PR_DestroyProcessAttr(PRProcessAttr *attr);
 
-NSPR_API(void) PR_ProcessAttrSetStdioRedirect(
-    PRProcessAttr *attr,
-    PRSpecialFD stdioFd,
-    PRFileDesc *redirectFd
-);
 
 /*
  * OBSOLETE -- use PR_ProcessAttrSetStdioRedirect instead.
  */
-NSPR_API(void) PR_SetStdioRedirect(
-    PRProcessAttr *attr,
-    PRSpecialFD stdioFd,
-    PRFileDesc *redirectFd
-);
-
-NSPR_API(PRStatus) PR_ProcessAttrSetCurrentDirectory(
-    PRProcessAttr *attr,
-    const char *dir
-);
-
-NSPR_API(PRStatus) PR_ProcessAttrSetInheritableFD(
-    PRProcessAttr *attr,
-    PRFileDesc *fd,
-    const char *name
-);
+
+
 
 /*
 ** Create a new process
@@ -63,23 +41,10 @@
 ** termination using PR_WaitProcess(). 
 */
 
-NSPR_API(PRProcess*) PR_CreateProcess(
-    const char *path,
-    char *const *argv,
-    char *const *envp,
-    const PRProcessAttr *attr);
-
-NSPR_API(PRStatus) PR_CreateProcessDetached(
-    const char *path,
-    char *const *argv,
-    char *const *envp,
-    const PRProcessAttr *attr);
 
-NSPR_API(PRStatus) PR_DetachProcess(PRProcess *process);
 
-NSPR_API(PRStatus) PR_WaitProcess(PRProcess *process, PRInt32 *exitCode);
 
-NSPR_API(PRStatus) PR_KillProcess(PRProcess *process);
+
 
 PR_END_EXTERN_C
 
--- pr/src/io/prmapopt.c
+++ pr/src/io/prmapopt.c
@@ -352,11 +352,11 @@
  * are really missing.
  */
 
-#if !defined(SO_LINGER)
+#if 0
 #error "SO_LINGER is not defined"
 #endif
 
-#if !defined(TCP_NODELAY)
+#if 0
 #error "TCP_NODELAY is not defined"
 #endif
 
@@ -366,10 +366,18 @@
  */
 #define _PR_NO_SUCH_SOCKOPT -1
 
+#ifndef SO_LINGER
+#define SO_LINGER           _PR_NO_SUCH_SOCKOPT
+#endif
+
 #ifndef SO_KEEPALIVE
 #define SO_KEEPALIVE        _PR_NO_SUCH_SOCKOPT
 #endif
 
+#ifndef SO_REUSEADDR
+#define SO_REUSEADDR        _PR_NO_SUCH_SOCKOPT
+#endif
+
 #ifndef SO_SNDBUF
 #define SO_SNDBUF           _PR_NO_SUCH_SOCKOPT
 #endif
--- pr/src/md/unix/unix.c
+++ pr/src/md/unix/unix.c
@@ -49,7 +49,7 @@
 #define _PRSockLen_t int
 #elif (defined(AIX) && !defined(AIX4_1)) || defined(FREEBSD) \
     || defined(NETBSD) || defined(OPENBSD) || defined(UNIXWARE) \
-    || defined(DGUX) || defined(NTO) || defined(RISCOS)
+    || defined(DGUX) || defined(NTO) || defined(RISCOS) || defined(CLOUDABI)
 #define _PRSockLen_t size_t
 #else
 #error "Cannot determine architecture"
@@ -64,7 +64,6 @@
 
 static PRInt64 minus_one;
 
-sigset_t timer_set;
 
 #if !defined(_PR_PTHREADS)
 
@@ -2816,10 +2815,8 @@
 
 void _PR_UnixInit(void)
 {
-    struct sigaction sigact;
     int rv;
 
-    sigemptyset(&timer_set);
 
 #if !defined(_PR_PTHREADS)
 
@@ -2869,7 +2866,7 @@
         rv = sigvector(SIGPIPE, &vec, NULL);
         PR_ASSERT(0 == rv);
     }
-#else
+#elif 0
     sigact.sa_handler = SIG_IGN;
     sigemptyset(&sigact.sa_mask);
     sigact.sa_flags = 0;
--- pr/src/md/unix/uxproces.c
+++ pr/src/md/unix/uxproces.c
@@ -9,7 +9,6 @@
 #include <unistd.h>
 #include <fcntl.h>
 #include <signal.h>
-#include <sys/wait.h>
 #include <string.h>
 #if defined(AIX)
 #include <dlfcn.h>  /* For dlopen, dlsym, dlclose */
@@ -46,6 +45,7 @@
     _PR_PID_WAITING
 } pr_PidState;
 
+#if 0
 typedef struct pr_PidRecord {
     pid_t pid;
     int exitStatus;
@@ -53,6 +53,7 @@
     PRCondVar *reapedCV;
     struct pr_PidRecord *next;
 } pr_PidRecord;
+#endif
 
 /*
  * Irix sprocs and LinuxThreads are actually a kind of processes
@@ -84,6 +85,7 @@
  * collected in this structure.
  */
 
+#if 0
 static struct {
     PRCallOnceType once;
     PRThread *thread;
@@ -110,6 +112,7 @@
                               */
 #endif /* AIX */
 } pr_wp;
+#endif
 
 #ifdef _PR_SHARE_CLONES
 static int pr_waitpid_daemon_exit;
@@ -125,6 +128,7 @@
 }
 #endif
 
+#if 0
 static PRStatus _MD_InitProcesses(void);
 #if !defined(_PR_NATIVE_THREADS)
 static void pr_InstallSigchldHandler(void);
@@ -334,6 +338,7 @@
 #endif
     return process;
 }
+#endif
 
 #ifdef _PR_SHARE_CLONES
 
@@ -412,6 +417,7 @@
 
 #else  /* ! _PR_SHARE_CLONES */
 
+#if 0
 PRProcess *
 _MD_CreateUnixProcess(
     const char *path,
@@ -424,6 +430,7 @@
     }
     return ForkAndExec(path, argv, envp, attr);
 }  /* _MD_CreateUnixProcess */
+#endif
 
 #endif  /* _PR_SHARE_CLONES */
 
@@ -436,6 +443,7 @@
 #define NBUCKETS (1 << NBUCKETS_LOG2)
 #define PID_HASH_MASK ((pid_t) (NBUCKETS - 1))
 
+#if 0
 static pr_PidRecord *
 FindPidTable(pid_t pid)
 {
@@ -883,3 +891,4 @@
     return PR_FAILURE;
 #endif
 }  /* _MD_KillUnixProcess */
+#endif
--- pr/src/misc/prinit.c
+++ pr/src/misc/prinit.c
@@ -456,6 +456,7 @@
 
 #endif /* defined(_PR_PTHREADS) */
 
+#if 0
 PR_IMPLEMENT(PRProcessAttr *)
 PR_NewProcessAttr(void)
 {
@@ -620,6 +621,7 @@
     attr->fdInheritBufferUsed += nwritten; 
     return PR_SUCCESS;
 }
+#endif
 
 PR_IMPLEMENT(PRFileDesc *) PR_GetInheritedFD(
     const char *name)
@@ -693,6 +695,7 @@
     }
 }
 
+#if 0
 PR_IMPLEMENT(PRProcess*) PR_CreateProcess(
     const char *path,
     char *const *argv,
@@ -738,6 +741,7 @@
 {
     return _PR_MD_KILL_PROCESS(process);
 }
+#endif
 
 /*
  ********************************************************************
--- pr/src/pthreads/ptio.c
+++ pr/src/pthreads/ptio.c
@@ -26,7 +26,6 @@
 #include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/uio.h>
-#include <sys/file.h>
 #include <sys/ioctl.h>
 #if defined(DARWIN)
 #include <sys/utsname.h> /* for uname */
@@ -44,7 +43,6 @@
 #else
 /* To pick up getrlimit() etc. */
 #include <sys/time.h>
-#include <sys/resource.h>
 #endif
 
 #ifdef SOLARIS
@@ -180,7 +178,8 @@
     || defined(LINUX) || defined(__GNU__) || defined(__GLIBC__) \
     || defined(FREEBSD) || defined(NETBSD) || defined(OPENBSD) \
     || defined(BSDI) || defined(NTO) || defined(DARWIN) \
-    || defined(UNIXWARE) || defined(RISCOS) || defined(SYMBIAN)
+    || defined(UNIXWARE) || defined(RISCOS) || defined(SYMBIAN) \
+    || defined(CLOUDABI)
 #define _PRSelectFdSetArg_t fd_set *
 #else
 #error "Cannot determine architecture"
@@ -2837,6 +2836,7 @@
     {
         switch (data->option)
         {
+#if 0
             case PR_SockOpt_Linger:
             {
                 struct linger linger;
@@ -2850,6 +2850,7 @@
                     PR_SecondsToInterval(linger.l_linger);
                 break;
             }
+#endif
             case PR_SockOpt_Reuseaddr:
             case PR_SockOpt_Keepalive:
             case PR_SockOpt_NoDelay:
@@ -2908,6 +2909,7 @@
                 data->value.mcast_ttl = ttl;
                 break;
             }
+#if 0
             case PR_SockOpt_AddMember:
             case PR_SockOpt_DropMember:
             {
@@ -2922,6 +2924,7 @@
                     mreq.imr_interface.s_addr;
                 break;
             }
+#endif
             case PR_SockOpt_McastInterface:
             {
                 length = sizeof(data->value.mcast_if.inet.ip);
@@ -3256,7 +3259,7 @@
     || defined(AIX) || defined(FREEBSD) || defined(NETBSD) \
     || defined(OPENBSD) || defined(BSDI) || defined(NTO) \
     || defined(DARWIN) || defined(UNIXWARE) || defined(RISCOS) \
-    || defined(SYMBIAN)
+    || defined(SYMBIAN) || defined(CLOUDABI)
 #define _PR_FCNTL_FLAGS O_NONBLOCK
 #else
 #error "Can't determine architecture"
--- pr/src/pthreads/ptthread.c
+++ pr/src/pthreads/ptthread.c
@@ -61,7 +61,6 @@
 
 static void _pt_thread_death(void *arg);
 static void _pt_thread_death_internal(void *arg, PRBool callDestructors);
-static void init_pthread_gc_support(void);
 
 #if defined(_PR_DCETHREADS) || _POSIX_THREAD_PRIORITY_SCHEDULING > 0
 static PRIntn pt_PriorityMap(PRThreadPriority pri)
@@ -1207,14 +1206,15 @@
 
 /* a bogus signal mask for forcing a timed wait */
 /* Not so bogus in AIX as we really do a sigwait */
+#if !defined(CLOUDABI)
 static sigset_t sigwait_set;
+#endif
 
 static struct timespec onemillisec = {0, 1000000L};
 #ifndef PT_NO_SIGTIMEDWAIT
 static struct timespec hundredmillisec = {0, 100000000L};
 #endif
 
-static void suspend_signal_handler(PRIntn sig);
 
 #ifdef PT_NO_SIGTIMEDWAIT
 static void null_signal_handler(PRIntn sig);
@@ -1227,6 +1227,7 @@
  * conflict with the use of these two signals in our GC support.
  * So we don't know how to support GC on Linux pthreads.
  */
+#if 0
 static void init_pthread_gc_support(void)
 {
 #ifndef SYMBIAN
@@ -1268,6 +1269,7 @@
 #endif /* defined(_PR_DCETHREADS) */
 #endif /* SYMBIAN */
 }
+#endif
 
 PR_IMPLEMENT(void) PR_SetThreadGCAble(void)
 {
@@ -1384,6 +1386,7 @@
 }
 #endif
 
+#if 0
 static void suspend_signal_handler(PRIntn sig)
 {
 	PRThread *me = PR_GetCurrentThread();
@@ -1463,7 +1466,7 @@
     PR_LOG(_pr_gc_lm, PR_LOG_ALWAYS, 
 	   ("doing pthread_kill in pt_SuspendSet thred %p tid = %X\n",
 	   thred, thred->id));
-#if defined(SYMBIAN)
+#if defined(CLOUDABI) || defined(SYMBIAN)
     /* All signal group functions are not implemented in Symbian OS */
     rv = 0;
 #else
@@ -1503,6 +1506,7 @@
     PR_LOG(_pr_gc_lm, PR_LOG_ALWAYS,
         ("End pt_SuspendTest thred %p tid %X\n", thred, thred->id));
 }  /* pt_SuspendTest */
+#endif
 
 static void pt_ResumeSet(PRThread *thred)
 {
@@ -1529,6 +1533,7 @@
 
 }  /* pt_ResumeSet */
 
+#if 0
 static void pt_ResumeTest(PRThread *thred)
 {
     PR_LOG(_pr_gc_lm, PR_LOG_ALWAYS, 
@@ -1570,8 +1575,6 @@
     PRThread *me = PR_GetCurrentThread();
     int rv;
 
-    rv = pthread_once(&pt_gc_support_control, init_pthread_gc_support);
-    PR_ASSERT(0 == rv);
     PR_LOG(_pr_gc_lm, PR_LOG_ALWAYS, ("Begin PR_SuspendAll\n"));
     /*
      * Stop all threads which are marked GC able.
@@ -1647,6 +1650,7 @@
         PR_IntervalToMilliseconds(etime - stime)));
 #endif
 }  /* PR_ResumeAll */
+#endif
 
 /* Return the stack pointer for the given thread- used by the GC */
 PR_IMPLEMENT(void *)PR_GetSP(PRThread *thred)
@@ -1671,8 +1675,6 @@
 {
     PRIntn rv;
 
-    rv = pthread_once(&pt_gc_support_control, init_pthread_gc_support);
-    PR_ASSERT(0 == rv);  /* returns -1 on failure */
 #ifdef DEBUG
     suspendAllOn = PR_TRUE;
 #endif
@@ -1731,6 +1733,7 @@
 
 PR_IMPLEMENT(PRStatus) PR_SetCurrentThreadName(const char *name)
 {
+#ifndef CLOUDABI
     PRThread *thread;
     size_t nameLen;
     int result;
@@ -1801,6 +1804,7 @@
         PR_SetError(PR_UNKNOWN_ERROR, result);
         return PR_FAILURE;
     }
+#endif
     return PR_SUCCESS;
 }
 
