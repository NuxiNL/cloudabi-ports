--- src/env.cc
+++ src/env.cc
@@ -7,6 +7,10 @@
 #include <stdio.h>
 #include <algorithm>
 
+#ifdef __CloudABI__
+#include <program.h>
+#endif
+
 namespace node {
 
 using v8::Context;
@@ -172,8 +176,13 @@
   Local<v8::StackTrace> stack =
       StackTrace::CurrentStackTrace(isolate(), 10, StackTrace::kDetailed);
 
+#ifdef __CloudABI__
+  fprintf(stderr, "(node:%s) WARNING: Detected use of sync API\n",
+          program_getpid());
+#else
   fprintf(stderr, "(node:%u) WARNING: Detected use of sync API\n",
           GetProcessId());
+#endif
 
   for (int i = 0; i < stack->GetFrameCount() - 1; i++) {
     Local<StackFrame> stack_frame = stack->GetFrame(i);
--- src/node.cc
+++ src/node.cc
@@ -132,6 +132,10 @@
   NODE_BUILTIN_MODULES(V)
 #undef V
 
+#ifdef __CloudABI__
+#include <program.h>
+#endif
+
 namespace node {
 
 using v8::Array;
@@ -3154,8 +3158,13 @@
       process_env_template->NewInstance(env->context()).ToLocalChecked();
   process->Set(FIXED_ONE_BYTE_STRING(env->isolate(), "env"), process_env);
 
+#ifdef __CloudABI__
+  READONLY_PROPERTY(process, "pid",
+                    String::NewFromUtf8(env->isolate(), program_getpid()));
+#else
   READONLY_PROPERTY(process, "pid",
                     Integer::New(env->isolate(), GetProcessId()));
+#endif
   READONLY_PROPERTY(process, "features", GetFeatures(env));
 
   CHECK(process->SetAccessor(env->context(),
