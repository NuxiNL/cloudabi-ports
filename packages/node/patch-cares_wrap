--- src/cares_wrap.cc
+++ src/cares_wrap.cc
@@ -33,6 +33,7 @@
 #include "uv.h"
 
 #include <errno.h>
+#include <netdb.h>
 #include <stdlib.h>
 #include <string.h>
 #include <vector>
@@ -1984,6 +1985,7 @@
 }
 
 
+#ifdef NI_NAMEREQD
 void GetNameInfo(const FunctionCallbackInfo<Value>& args) {
   Environment* env = Environment::GetCurrent(args);
 
@@ -2011,6 +2013,7 @@
 
   args.GetReturnValue().Set(err);
 }
+#endif
 
 
 void GetServers(const FunctionCallbackInfo<Value>& args) {
@@ -2140,7 +2143,9 @@
   Environment* env = Environment::GetCurrent(context);
 
   env->SetMethod(target, "getaddrinfo", GetAddrInfo);
+#ifdef NI_NAMEREQD
   env->SetMethod(target, "getnameinfo", GetNameInfo);
+#endif
   env->SetMethod(target, "isIP", IsIP);
   env->SetMethod(target, "isIPv4", IsIPv4);
   env->SetMethod(target, "isIPv6", IsIPv6);
@@ -2153,10 +2158,14 @@
               Integer::New(env->isolate(), AF_INET6));
   target->Set(FIXED_ONE_BYTE_STRING(env->isolate(), "AF_UNSPEC"),
               Integer::New(env->isolate(), AF_UNSPEC));
+#ifdef AI_ADDRCONFIG
   target->Set(FIXED_ONE_BYTE_STRING(env->isolate(), "AI_ADDRCONFIG"),
               Integer::New(env->isolate(), AI_ADDRCONFIG));
+#endif
+#ifdef AI_V4MAPPED
   target->Set(FIXED_ONE_BYTE_STRING(env->isolate(), "AI_V4MAPPED"),
               Integer::New(env->isolate(), AI_V4MAPPED));
+#endif
 
   auto is_construct_call_callback =
       [](const FunctionCallbackInfo<Value>& args) {
