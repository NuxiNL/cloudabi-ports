--- src/node.cc
+++ src/node.cc
@@ -2632,6 +2632,7 @@
 // FIXME(bnoordhuis) Not multi-context ready. TBD how to resolve the conflict
 // when two contexts try to load the same shared object. Maybe have a shadow
 // cache that's a plain C list or hash table that's shared across contexts?
+#ifndef __CloudABI__
 static void DLOpen(const FunctionCallbackInfo<Value>& args) {
   Environment* env = Environment::GetCurrent(args);
   uv_lib_t lib;
@@ -2718,6 +2719,7 @@
   // Tell coverity that 'handle' should not be freed when we return.
   // coverity[leaked_storage]
 }
+#endif
 
 
 static void OnFatalError(const char* location, const char* message) {
@@ -3688,7 +3690,9 @@
 
   env->SetMethod(process, "cpuUsage", CPUUsage);
 
+#ifndef __CloudABI__
   env->SetMethod(process, "dlopen", DLOpen);
+#endif
 
   env->SetMethod(process, "uptime", Uptime);
   env->SetMethod(process, "memoryUsage", MemoryUsage);
