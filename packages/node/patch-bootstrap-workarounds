--- lib/fs.js
+++ lib/fs.js
@@ -38,7 +38,6 @@
 const { Readable, Writable } = require('stream');
 const EventEmitter = require('events');
 const { FSReqWrap } = binding;
-const { FSEvent } = process.binding('fs_event_wrap');
 const internalFS = require('internal/fs');
 const { getPathFromURL } = require('internal/url');
 const internalUtil = require('internal/util');
--- lib/internal/bootstrap_node.js
+++ lib/internal/bootstrap_node.js
@@ -439,7 +439,11 @@
       // getcwd(3) can fail if the current working directory has been deleted.
       // Fall back to the directory name of the (absolute) executable path.
       // It's not really correct but what are the alternatives?
-      return path.dirname(process.execPath);
+      try {
+        return path.dirname(process.execPath);
+      } catch (ex) {
+        return '/unknown';
+      }
     }
   }
 
--- lib/module.js
+++ lib/module.js
@@ -742,7 +742,6 @@
     parent.require(requests[n]);
 };
 
-Module._initPaths();
 
 // backwards compatibility
 Module.Module = Module;
--- lib/os.js
+++ lib/os.js
@@ -64,13 +64,8 @@
 const getOSType = getCheckedFunction(_getOSType);
 const getUserInfo = getCheckedFunction(_getUserInfo);
 
-getFreeMem[Symbol.toPrimitive] = () => getFreeMem();
-getHostname[Symbol.toPrimitive] = () => getHostname();
-getHomeDirectory[Symbol.toPrimitive] = () => getHomeDirectory();
 getOSRelease[Symbol.toPrimitive] = () => getOSRelease();
 getOSType[Symbol.toPrimitive] = () => getOSType();
-getTotalMem[Symbol.toPrimitive] = () => getTotalMem();
-getUptime[Symbol.toPrimitive] = () => getUptime();
 
 const kEndianness = isBigEndian ? 'BE' : 'LE';
 
@@ -177,9 +172,6 @@
   uptime: getUptime,
 
   // Deprecated APIs
-  getNetworkInterfaces: deprecate(getInterfaceAddresses,
-                                  getNetworkInterfacesDepMsg,
-                                  'DEP0023'),
   tmpDir: deprecate(tmpdir, tmpDirDeprecationMsg, 'DEP0022')
 };
 
--- lib/repl.js
+++ lib/repl.js
@@ -83,8 +83,12 @@
   // path.resolve('repl') fails when the current working directory has been
   // deleted.  Fall back to the directory name of the (absolute) executable
   // path.  It's not really correct but what are the alternatives?
-  const dirname = path.dirname(process.execPath);
-  module.filename = path.resolve(dirname, 'repl');
+  try {
+    const dirname = path.dirname(process.execPath);
+    module.filename = path.resolve(dirname, 'repl');
+  } catch (e) {
+    module.filename = '/';
+  }
 }
 
 // hack for repl require to work properly with node_modules folders
