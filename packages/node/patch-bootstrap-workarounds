--- lib/internal/bootstrap_node.js
+++ lib/internal/bootstrap_node.js
@@ -194,7 +194,7 @@
         perf.markMilestone(
           NODE_PERFORMANCE_MILESTONE_PRELOAD_MODULE_LOAD_END);
         // If -i or --interactive were passed, or stdin is a TTY.
-        if (process._forceRepl || NativeModule.require('tty').isatty(0)) {
+        if (process._forceRepl) {
           // REPL
           const cliRepl = NativeModule.require('internal/repl');
           cliRepl.createInternalRepl(process.env, function(err, repl) {
@@ -431,7 +431,11 @@
       // getcwd(3) can fail if the current working directory has been deleted.
       // Fall back to the directory name of the (absolute) executable path.
       // It's not really correct but what are the alternatives?
-      return path.dirname(process.execPath);
+      try {
+        return path.dirname(process.execPath);
+      } catch (ex) {
+        return '/unknown';
+      }
     }
   }
 
--- lib/internal/loader/ModuleRequest.js
+++ lib/internal/loader/ModuleRequest.js
@@ -1,13 +1,10 @@
 'use strict';
 
-const fs = require('fs');
 const internalCJSModule = require('internal/module');
 const internalURLModule = require('internal/url');
-const internalFS = require('internal/fs');
 const NativeModule = require('native_module');
 const { extname, _makeLong } = require('path');
 const { URL } = require('url');
-const { realpathSync } = require('fs');
 const preserveSymlinks = !!process.binding('config').preserveSymlinks;
 const {
   ModuleWrap,
@@ -16,7 +13,6 @@
 const errors = require('internal/errors');
 
 const search = require('internal/loader/search');
-const asyncReadFile = require('util').promisify(require('fs').readFile);
 const debug = require('util').debuglog('esm');
 
 const realpathCache = new Map();
--- lib/module.js
+++ lib/module.js
@@ -27,11 +27,7 @@
 const { getURLFromFilePath } = require('internal/url');
 const vm = require('vm');
 const assert = require('assert').ok;
-const fs = require('fs');
-const internalFS = require('internal/fs');
 const path = require('path');
-const internalModuleReadFile = process.binding('fs').internalModuleReadFile;
-const internalModuleStat = process.binding('fs').internalModuleStat;
 const preserveSymlinks = !!process.binding('config').preserveSymlinks;
 const experimentalModules = !!process.binding('config').experimentalModules;
 
@@ -713,7 +709,6 @@
     parent.require(requests[n]);
 };
 
-Module._initPaths();
 
 // backwards compatibility
 Module.Module = Module;
