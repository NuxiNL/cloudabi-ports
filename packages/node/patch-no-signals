--- deps/v8/src/base/debug/stack_trace_android.cc
+++ deps/v8/src/base/debug/stack_trace_android.cc
@@ -55,6 +55,9 @@
 namespace debug {
 
 bool EnableInProcessStackDumping() {
+#if V8_OS_CLOUDABI
+  return true;
+#else
   // When running in an application, our code typically expects SIGPIPE
   // to be ignored.  Therefore, when testing that same code, it should run
   // with SIGPIPE ignored as well.
@@ -64,6 +67,7 @@
   action.sa_handler = SIG_IGN;
   sigemptyset(&action.sa_mask);
   return (sigaction(SIGPIPE, &action, NULL) == 0);
+#endif
 }
 
 void DisableSignalStackDump() {
--- deps/v8/src/libsampler/sampler.cc
+++ deps/v8/src/libsampler/sampler.cc
@@ -4,7 +4,7 @@
 
 #include "src/libsampler/sampler.h"
 
-#if V8_OS_POSIX && !V8_OS_CYGWIN
+#if V8_OS_POSIX && !V8_OS_CYGWIN && !V8_OS_CLOUDABI
 
 #define USE_SIGNALS
 
@@ -336,6 +336,12 @@
  private:
   HANDLE profiled_thread_;
 };
+
+#elif V8_OS_CLOUDABI
+
+class Sampler::PlatformData {
+};
+
 #endif  // USE_SIGNALS
 
 
@@ -635,6 +641,11 @@
   pthread_kill(platform_data()->vm_tid(), SIGPROF);
 }
 
+#elif V8_OS_CLOUDABI
+
+void Sampler::DoSample() {
+}
+
 #elif V8_OS_WIN || V8_OS_CYGWIN
 
 void Sampler::DoSample() {
