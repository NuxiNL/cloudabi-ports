--- glib/gdir.c
+++ glib/gdir.c
@@ -82,6 +82,7 @@
  *
  * Since: 2.38
  */
+#ifndef __CloudABI__
 GDir *
 g_dir_open_with_errno (const gchar *path,
                        guint        flags)
@@ -158,6 +159,7 @@
 
   return dir;
 }
+#endif
 
 #if defined (G_OS_WIN32) && !defined (_WIN64)
 
--- glib/gdir.h
+++ glib/gdir.h
@@ -36,10 +36,12 @@
 
 typedef struct _GDir GDir;
 
+#ifndef __CloudABI__
 GLIB_AVAILABLE_IN_ALL
 GDir    *                g_dir_open           (const gchar  *path,
 					       guint         flags,
 					       GError      **error);
+#endif
 GLIB_AVAILABLE_IN_ALL
 const gchar *            g_dir_read_name      (GDir         *dir);
 GLIB_AVAILABLE_IN_ALL
--- glib/glib-private.c
+++ glib/glib-private.c
@@ -44,7 +44,9 @@
     g_check_setuid,
     g_main_context_new_with_next_id,
 
+#ifndef __CloudABI__
     g_dir_open_with_errno,
+#endif
     g_dir_new_from_dirp,
 
     glib_init,
--- glib/glib-private.h
+++ glib/glib-private.h
@@ -37,7 +37,9 @@
 gchar *_glib_get_locale_dir    (void);
 #endif
 
+#ifndef __CloudABI__
 GDir * g_dir_open_with_errno (const gchar *path, guint flags);
+#endif
 GDir * g_dir_new_from_dirp (gpointer dirp);
 
 #define GLIB_PRIVATE_CALL(symbol) (glib__private__()->symbol)
@@ -57,8 +59,10 @@
   gboolean              (* g_check_setuid)              (void);
   GMainContext *        (* g_main_context_new_with_next_id) (guint next_id);
 
+#ifndef __CloudABI__
   GDir *                (* g_dir_open_with_errno)       (const gchar *path,
                                                          guint        flags);
+#endif
   GDir *                (* g_dir_new_from_dirp)         (gpointer dirp);
 
   /* See glib-init.c */
