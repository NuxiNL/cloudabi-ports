--- src/uvw/process.hpp
+++ src/uvw/process.hpp
@@ -19,6 +19,7 @@
 namespace details {
 
 
+#ifndef __CloudABI__
 enum class UVProcessFlags: std::underlying_type_t<uv_process_flags> {
     SETUID = UV_PROCESS_SETUID,
     SETGID = UV_PROCESS_SETGID,
@@ -36,6 +37,7 @@
     READABLE_PIPE = UV_READABLE_PIPE,
     WRITABLE_PIPE = UV_WRITABLE_PIPE
 };
+#endif
 
 
 }
@@ -67,6 +69,23 @@
         process.publish(ExitEvent{exitStatus, termSignal});
     }
 
+#ifdef __CloudABI__
+public:
+    void spawn(int executable, const argdata_t &argdata) {
+        uv_process_options_t po;
+
+        po.exit_cb = &exitCallback;
+
+        po.executable = executable;
+        po.argdata = &argdata;
+
+        // fake initialization so as to have leak invoked
+        // see init member function for more details
+        initialize([](auto...){ return 0; });
+
+        invoke(&uv_spawn, parent(), get(), &po);
+    }
+#else
 public:
     using Process = details::UVProcessFlags;
     using StdIO = details::UVStdIOFlags;
@@ -323,6 +342,7 @@
     std::vector<uv_stdio_container_t> poStreamStdio;
     Uid poUid;
     Gid poGid;
+#endif
 };
 
 
