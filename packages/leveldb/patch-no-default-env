--- db/c.cc
+++ db/c.cc
@@ -568,12 +568,6 @@
   delete cache;
 }
 
-leveldb_env_t* leveldb_create_default_env() {
-  leveldb_env_t* result = new leveldb_env_t;
-  result->rep = Env::Default();
-  result->is_default = true;
-  return result;
-}
 
 void leveldb_env_destroy(leveldb_env_t* env) {
   if (!env->is_default) delete env->rep;
--- include/leveldb/c.h
+++ include/leveldb/c.h
@@ -265,7 +265,6 @@
 
 /* Env */
 
-extern leveldb_env_t* leveldb_create_default_env();
 extern void leveldb_env_destroy(leveldb_env_t*);
 
 /* Utility */
--- include/leveldb/env.h
+++ include/leveldb/env.h
@@ -38,7 +38,6 @@
   // implementation instead of relying on this default environment.
   //
   // The result of Default() belongs to leveldb and must never be deleted.
-  static Env* Default();
 
   // Create a brand new sequentially-readable file with the specified name.
   // On success, stores a pointer to the new file in *result and returns OK.
--- util/options.cc
+++ util/options.cc
@@ -14,7 +14,7 @@
       create_if_missing(false),
       error_if_exists(false),
       paranoid_checks(false),
-      env(Env::Default()),
+      env(NULL),
       info_log(NULL),
       write_buffer_size(4<<20),
       max_open_files(1000),
