--- mad.h
+++ mad.h
@@ -649,8 +649,6 @@
 
 signed long mad_timer_count(mad_timer_t, enum mad_units);
 unsigned long mad_timer_fraction(mad_timer_t, unsigned long);
-void mad_timer_string(mad_timer_t, char *, char const *,
-		      enum mad_units, enum mad_units, unsigned long);
 
 # endif
 
--- timer.c
+++ timer.c
@@ -342,6 +342,7 @@
  * NAME:	timer->string()
  * DESCRIPTION:	write a string representation of a timer using a template
  */
+#if 0
 void mad_timer_string(mad_timer_t timer,
 		      char *dest, char const *format, enum mad_units units,
 		      enum mad_units fracunits, unsigned long subparts)
@@ -483,3 +484,4 @@
     break;
   }
 }
+#endif
--- timer.h
+++ timer.h
@@ -94,7 +94,5 @@
 
 signed long mad_timer_count(mad_timer_t, enum mad_units);
 unsigned long mad_timer_fraction(mad_timer_t, unsigned long);
-void mad_timer_string(mad_timer_t, char *, char const *,
-		      enum mad_units, enum mad_units, unsigned long);
 
 # endif
