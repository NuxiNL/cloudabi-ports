--- src/lobject.c
+++ src/lobject.c
@@ -333,6 +333,7 @@
   size_t len;
   lua_assert(ttisnumber(obj));
   if (ttisinteger(obj))
+#define sprintf(a, ...) snprintf(a, SIZE_MAX, __VA_ARGS__)
     len = lua_integer2str(buff, ivalue(obj));
   else {
     len = lua_number2str(buff, fltvalue(obj));
@@ -394,6 +395,7 @@
       case 'p': {
         char buff[4*sizeof(void *) + 8]; /* should be enough space for a '%p' */
         int l = sprintf(buff, "%p", va_arg(argp, void *));
+#undef sprintf
         pushstr(L, buff, l);
         break;
       }
--- src/lstrlib.c
+++ src/lstrlib.c
@@ -906,9 +906,9 @@
     else if (*s == '\0' || iscntrl(uchar(*s))) {
       char buff[10];
       if (!isdigit(uchar(*(s+1))))
-        sprintf(buff, "\\%d", (int)uchar(*s));
+        snprintf(buff, sizeof(buff), "\\%d", (int)uchar(*s));
       else
-        sprintf(buff, "\\%03d", (int)uchar(*s));
+        snprintf(buff, sizeof(buff), "\\%03d", (int)uchar(*s));
       luaL_addstring(b, buff);
     }
     else
@@ -947,7 +947,7 @@
   size_t l = strlen(form);
   size_t lm = strlen(lenmod);
   char spec = form[l - 1];
-  strcpy(form + l - 1, lenmod);
+  memcpy(form + l - 1, lenmod, lm);
   form[l + lm - 1] = spec;
   form[l + lm] = '\0';
 }
@@ -975,6 +975,7 @@
       strfrmt = scanformat(L, strfrmt, form);
       switch (*strfrmt++) {
         case 'c': {
+#define sprintf(a, ...) snprintf(a, SIZE_MAX, __VA_ARGS__)
           nb = sprintf(buff, form, (int)luaL_checkinteger(L, arg));
           break;
         }
@@ -1009,6 +1010,7 @@
           }
           else {
             nb = sprintf(buff, form, s);
+#undef sprintf
             lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */
           }
           break;
