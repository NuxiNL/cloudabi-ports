--- src/libjasper/base/jas_image.c
+++ src/libjasper/base/jas_image.c
@@ -319,7 +319,7 @@
 	cmpt->cps_ = (depth + 7) / 8;
 
 	size = cmpt->width_ * cmpt->height_ * cmpt->cps_;
-	cmpt->stream_ = (inmem) ? jas_stream_memopen(0, size) : jas_stream_tmpfile();
+	cmpt->stream_ = jas_stream_memopen(0, size);
 	if (!cmpt->stream_) {
 		jas_image_cmpt_destroy(cmpt);
 		return 0;
--- src/libjasper/base/jas_stream.c
+++ src/libjasper/base/jas_stream.c
@@ -233,6 +233,7 @@
 	return stream;
 }
 
+#if 0
 jas_stream_t *jas_stream_fopen(const char *filename, const char *mode)
 {
 	jas_stream_t *stream;
@@ -292,6 +293,7 @@
 
 	return stream;
 }
+#endif
 
 jas_stream_t *jas_stream_freopen(const char *path, const char *mode, FILE *fp)
 {
@@ -341,6 +343,7 @@
 	return stream;
 }
 
+#if 0
 jas_stream_t *jas_stream_tmpfile()
 {
 	jas_stream_t *stream;
@@ -392,6 +395,7 @@
 
 	return stream;
 }
+#endif
 
 jas_stream_t *jas_stream_fdopen(int fd, const char *mode)
 {
@@ -430,7 +434,6 @@
 	}
 	obj->fd = fd;
 	obj->flags = 0;
-	obj->pathname[0] = '\0';
 	stream->obj_ = (void *) obj;
 
 	/* Do not close the underlying file descriptor when the stream is
@@ -553,7 +556,7 @@
 	int ret;
 
 	va_start(ap, fmt);
-	ret = vsprintf(buf, fmt, ap);
+	ret = vsnprintf(buf, sizeof(buf), fmt, ap);
 	jas_stream_puts(stream, buf);
 	va_end(ap);
 	return ret;
@@ -1110,9 +1113,6 @@
 	jas_stream_fileobj_t *fileobj = JAS_CAST(jas_stream_fileobj_t *, obj);
 	int ret;
 	ret = close(fileobj->fd);
-	if (fileobj->flags & JAS_STREAM_FILEOBJ_DELONCLOSE) {
-		unlink(fileobj->pathname);
-	}
 	jas_free(fileobj);
 	return ret;
 }
--- src/libjasper/include/jasper/jas_stream.h
+++ src/libjasper/include/jasper/jas_stream.h
@@ -251,10 +251,8 @@
 typedef struct {
 	int fd;
 	int flags;
-	char pathname[L_tmpnam + 1];
 } jas_stream_fileobj_t;
 
-#define	JAS_STREAM_FILEOBJ_DELONCLOSE	0x01
 #define JAS_STREAM_FILEOBJ_NOCLOSE	0x02
 
 /*
@@ -288,7 +286,6 @@
 \******************************************************************************/
 
 /* Open a file as a stream. */
-jas_stream_t *jas_stream_fopen(const char *filename, const char *mode);
 
 /* Open a memory buffer as a stream. */
 jas_stream_t *jas_stream_memopen(char *buf, int bufsize);
@@ -300,7 +297,6 @@
 jas_stream_t *jas_stream_freopen(const char *path, const char *mode, FILE *fp);
 
 /* Open a temporary file as a stream. */
-jas_stream_t *jas_stream_tmpfile(void);
 
 /* Close a stream. */
 int jas_stream_close(jas_stream_t *stream);
--- src/libjasper/mif/mif_cod.c
+++ src/libjasper/mif/mif_cod.c
@@ -91,7 +91,6 @@
 	MIF_VSAMP,
 	MIF_PREC,
 	MIF_SGND,
-	MIF_DATA
 } mif_tagid_t;
 
 /******************************************************************************\
@@ -130,7 +129,6 @@
 	{MIF_VSAMP, "samppery"},
 	{MIF_PREC, "prec"},
 	{MIF_SGND, "sgnd"},
-	{MIF_DATA, "data"},
 	{-1, 0}
 };
 
@@ -173,7 +171,7 @@
 
 	for (cmptno = 0; cmptno < hdr->numcmpts; ++cmptno) {
 		cmpt = hdr->cmpts[cmptno];
-		tmpstream = cmpt->data ? jas_stream_fopen(cmpt->data, "rb") : in;
+		tmpstream = in;
 		if (!tmpstream) {
 			goto error;
 		}
@@ -297,7 +295,6 @@
 	/* Output component data. */
 	for (cmptno = 0; cmptno < hdr->numcmpts; ++cmptno) {
 		cmpt = hdr->cmpts[cmptno];
-		if (!cmpt->data) {
 			if (!(tmpimage = jas_image_create0())) {
 				goto error;
 			}	
@@ -338,7 +335,6 @@
 			}
 			jas_image_destroy(tmpimage);
 			tmpimage = 0;
-		}
 	}
 
 	mif_hdr_destroy(hdr);
@@ -531,7 +527,6 @@
 	cmpt->height = 0;
 	cmpt->prec = 0;
 	cmpt->sgnd = -1;
-	cmpt->data = 0;
 
 	if (!(tvp = jas_tvparser_create(buf))) {
 		goto error;
@@ -563,11 +558,6 @@
 		case MIF_SGND:
 			cmpt->sgnd = atoi(jas_tvparser_getval(tvp));
 			break;
-		case MIF_DATA:
-			if (!(cmpt->data = jas_strdup(jas_tvparser_getval(tvp)))) {
-				return -1;
-			}
-			break;
 		}
 	}
 	jas_tvparser_destroy(tvp);
@@ -607,9 +597,6 @@
 		  "sampperx=%ld samppery=%ld width=%ld height=%ld prec=%d sgnd=%d",
 		  cmpt->tlx, cmpt->tly, cmpt->sampperx, cmpt->samppery, cmpt->width,
 		  cmpt->height, cmpt->prec, cmpt->sgnd);
-		if (cmpt->data) {
-			jas_stream_printf(out, " data=%s", cmpt->data);
-		}
 		jas_stream_printf(out, "\n");
 	}
 
@@ -648,9 +635,6 @@
 
 static void mif_cmpt_destroy(mif_cmpt_t *cmpt)
 {
-	if (cmpt->data) {
-		jas_free(cmpt->data);
-	}
 	jas_free(cmpt);
 }
 
@@ -745,7 +729,6 @@
 		cmpt->samppery = jas_image_cmptvstep(image, cmptno);
 		cmpt->prec = jas_image_cmptprec(image, cmptno);
 		cmpt->sgnd = jas_image_cmptsgnd(image, cmptno);
-		cmpt->data = 0;
 	}
 	return hdr;
 }
--- src/libjasper/mif/mif_cod.h
+++ src/libjasper/mif/mif_cod.h
@@ -102,7 +102,6 @@
 
 	int_fast16_t sgnd;
 
-	char *data;
 
 } mif_cmpt_t;
 
